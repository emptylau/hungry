
联合：
	成员变量内存共享的特殊构造类，具有构造和析构，还有访问权限控制。默认公有

联合特点：
	1. 所有成员共享同一内存,占用空间最大的那个成员大小就是联合对象的大小
	2. 联合里哪些不能放？
		a. 成员中不能含有具有构造类型的成员，因为不保证调用构造和析构
		b. 静态的/const/引用 都不能放
	3. 可以有成员函数, 成员还可以有访问权限。但默认public
	4. 所有的成员，同时只能有一个成员被赋值，赋值后，其他成员的数据被覆盖
	5. 匿名联合：没有名称的联合。
		联合内的成员共享同一内存，访问时，直接使用联合内成员变量的名称即可。

		class Sample{
		public:
			union { 
			 	int nValue;
				float fValue;
			};

			void setValue(int v){
				nValue = v;// 注意：直接使用即可
			}

			void setVaule(float v){
				fValue = v;
			}

			/*
			 * other ...
			*/
		};

		如果匿名联合为全局的话，必须声明为静态static。或者将它放在匿名名称空间中。
		匿名联合，不能有私有或受保护的成员，且不能有成员方法。
		匿名联合内成员数据的作用域为包含该联合的那个区域,因此联合成员的名称不能同作用域内的其他成员/变量名冲突。


联合应用：
	1. 用于对内存要求严格的地方，用于节省内存
	2. 字节序列测试(大小端测试)

