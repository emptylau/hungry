#include "webserver.nsmap"
#include "soapH.h"


static bool is_running = false;

int main(int argc, char* argv[]){

    int server_port = 8080;
    std::string server_ip("0.0.0.0");

    if (argc >= 2){
        server_port = atoi(argv[1]);
    }

    struct soap* soap;
    soap = soap_new();
    if (!soap){
        printf("error: soap new\n"):
        return 0;
    }

    int serverfd = soap_bind(soap, ip.c_str(), port);
    if (!SOAP_INVALID_SOCKET(serverfd)){
        printf("error: ip %s , port %d\n", ip.c_str(), port);
        return 0;
    }

    printf("info: bind successfule! ip:%s port:%d\n", ip.c_str(), port);

    is_running = true;

    while(is_running){
        
        int salverfd = soap_accept(soap);
        if (!salverfd){
            continue;
        }

        struct soap* copy = soap_copy(soap);
        if (!copy){
            printf("error: soap copy. salverfd %d\n", salverfd);
            continue;
        }

        soap_serve(copy);
        soap_end(copy);
        soap_delete(copy);
    }

    return 0;
}

int ns__add(double a, double b, double* result){

    *result = a + b;

    return 0;
}

int ns__sub(double a, double b, double* result){
    *result = a - b;
    return 0;
}

int ns_mul(double a, double b, double* result){
    *result = a * b;
    return 0;
}

int ns__div(double a, double b, double* result){
    *result = a / b;
    return 0;
}
